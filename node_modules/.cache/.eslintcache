[{"/Users/arthamnishanth/Desktop/projects/React-practice/updatednotes/src/index.js":"1","/Users/arthamnishanth/Desktop/projects/React-practice/updatednotes/src/App.js":"2","/Users/arthamnishanth/Desktop/projects/React-practice/updatednotes/src/components/Todolist.jsx":"3"},{"size":410,"mtime":1652782631105,"results":"4","hashOfConfig":"5"},{"size":160,"mtime":1652812243317,"results":"6","hashOfConfig":"5"},{"size":3678,"mtime":1652857399827,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"1rvpuos",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/arthamnishanth/Desktop/projects/React-practice/updatednotes/src/index.js",[],[],[],"/Users/arthamnishanth/Desktop/projects/React-practice/updatednotes/src/App.js",[],[],[],"/Users/arthamnishanth/Desktop/projects/React-practice/updatednotes/src/components/Todolist.jsx",["20","21","22","23"],[],"import React, { useState, useEffect } from \"react\";\nimport \"./todo.css\";\n\n// get the localStorage data back\n\n\nconst Todolist = () => {\n\n    // add the items fucnction\n\n\n    //edit the items\n\n\n    // how to delete items section\n\n\n    // adding localStorage\n    const [inputData, setInputData] = useState(\"\")\n    const [todoItems, setTodoItems] = useState([]);\n    const [togggleButt,setTogggleButt] = useState(false);\n    let replaceData;\n    console.log(inputData);\n    const addItem = () => {\n        if (!inputData){\n            alert(\"Enter data in input box\");\n            return;}\n        \n        const newInputData = {\n            id : new Date().getTime(),\n            data : inputData\n        }\n\n            setTodoItems([newInputData,...todoItems])\n            setInputData(\"\");\n            setTogggleButt(false);\n\n        console.log(todoItems);\n    }\n    const deleteItem = (id) => {\n        if (id === \"all\"){\n            setTodoItems([]);\n            return;\n        }\n        const newItems = todoItems.filter((curr)=>{\n            if (id != curr.id)\n            return curr;\n        })\n        setTodoItems(newItems);\n    }\n    const editItem = (obj) =>{\n        setInputData(obj.data);\n        setTogggleButt(true);\n        deleteItem(obj.id);\n    }\n    return (\n        <>\n            <div className=\"main-div\">\n                <div className=\"child-div\">\n                    <figure>\n                        <img src={process.env.PUBLIC_URL + '/images/new.jpeg'} alt=\"todologo\" />\n                        <figcaption>Add Your List Here ✌</figcaption>\n                    </figure>\n                    <div className=\"addItems\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"✍ Add Item\"\n                            className=\"form-control\"\n                            onChange={(event) => { setInputData(event.target.value) }}\n                            value={inputData}\n                        />\n                        {togggleButt?<i className=\"far fa-edit add-btn\" onClick={addItem}></i > \n                        :<i className=\"fa fa-plus add-btn\" onClick={addItem}></i>\n                    }\n\n                    </div>\n                    {/* show our items  */}\n                    <div className=\"showItems\">\n                        {\n                            todoItems.map((Curr, index) => {\n                                return (\n                                    <div className=\"eachItem\" key={index} >\n                                        <h3>{Curr.data}</h3>\n                                        <div className=\"todo-btn\">\n                                            <i className=\"far fa-edit add-btn\" onClick={()=>editItem(Curr)}></i>\n                                            {/* Delete */}\n                                            <i className=\"far fa-trash-alt add-btn\" onClick={()=>deleteItem(Curr.id)}></i>\n                                        </div>\n                                    </div>\n                                );\n                            }\n                            )}\n                    </div>\n\n                    {/* rmeove all button  */}\n                    <div className=\"showItems\">\n                        <button\n                            className=\"btn effect04\"\n                            data-sm-link-text=\"Remove All\"\n                            onClick={()=>deleteItem(\"all\")}\n                        >\n                            <span> CHECK LIST</span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Todolist;",{"ruleId":"24","severity":1,"message":"25","line":1,"column":27,"nodeType":"26","messageId":"27","endLine":1,"endColumn":36},{"ruleId":"24","severity":1,"message":"28","line":22,"column":9,"nodeType":"26","messageId":"27","endLine":22,"endColumn":20},{"ruleId":"29","severity":1,"message":"30","line":45,"column":49,"nodeType":"31","messageId":"32","endLine":45,"endColumn":51},{"ruleId":"33","severity":1,"message":"34","line":46,"column":20,"nodeType":"35","messageId":"36","endLine":46,"endColumn":22},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'replaceData' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]